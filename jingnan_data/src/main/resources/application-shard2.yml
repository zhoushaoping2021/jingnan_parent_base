spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.68.144:3306/jingnan_all?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
        username: admin
        password: admin
      ds1:
        type: com.zaxxer.hikari.HikariDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        jdbcUrl: jdbc:mysql://192.168.68.145:3306/jingnan_all?serverTimezone=Asia/Shanghai&useUnicode=true&characterEncoding=utf-8
        username: admin
        password: admin
    sharding:
      tables:
        tb_order:
          actual-data-nodes: ds$->{0..1}.tb_order
          database-strategy:
            inline:
              sharding-column: id
              algorithm-expression: ds$->{id.toLong() % 2}
        tb_order_item:
          actual-data-nodes: ds$->{0..1}.tb_order_item
          database-strategy:
            inline:
              sharding-column: order_id
              algorithm-expression: ds$->{order_id.toLong() % 2}
        tb_user:
          actual-data-nodes: ds$->{0..1}.tb_user
          database-strategy:
            inline:
              sharding-column: username
              algorithm-expression: ds$->{Math.abs(username.hashCode()) % 2}
        tb_user_order_map:
          actual-data-nodes: ds$->{0..1}.tb_user_order_map
          database-strategy:
            inline:
              sharding-column: username
              algorithm-expression: ds$->{Math.abs(username.hashCode()) % 2}